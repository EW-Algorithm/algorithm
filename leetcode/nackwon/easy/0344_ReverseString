package JavaSolution;

/**
 * In-place 알고리즘을 사용하여 String 을 Reverse 해라
 *
 * In-place 알고리즘
 *  - 추가적인 메모리 공간을 많이 하지 않거나 혹으 전혀하지 필요하지 않는 알고리즘을 말함.
 *  ex) 길이가 n 인 리스트가 있다면 이 리스트를 정렬할 때 추가적인 메모리 공간을 할당하지 않고 정렬하면 이를 In-place 정렬이라고 한다.
 *  - 해당 알고리즘에 포함되는 대표 알고리즘이 존재
 *      - Insertion Sort
 *      - Selection Sort
 *      - Bubble Sort
 *      - Shell Sort
 *      - Heap Sort
 */
public class ReverseSolution {

    public static void main(String[] args) {

        ReverseSolution reverseSolution = new ReverseSolution();

        char[] arr = {'h', 'e', 'l', 'l', 'o'};
        reverseSolution.solution2(arr);
    }

    /**
     * 선택 정렬을 이용하여 문제 해결
     * 첫 번째 것과 마지막 것을 선택 후 교체하는 형식으로 진행
     *
     * @param s
     */
    public void solution1(char[] s) {

        int intSize = s.length;

        for (int i=0; i<intSize/2; ++i) {
            char chSelected = s[i];
            char chTmp = s[intSize-i-1];

            s[intSize-i-1] = chSelected;
            s[i] = chTmp;
        }

        System.out.println(s);
    }

    /**
     * 해당 방법도 존재함
     * 
     * @param s
     */
    public void solution2(char[] s) {

        int intSize = s.length;
        StringBuffer sb= new StringBuffer();

        for(int i=intSize-1; i>=0; --i) {
            sb.append(s[i]);
        }
    }
}
